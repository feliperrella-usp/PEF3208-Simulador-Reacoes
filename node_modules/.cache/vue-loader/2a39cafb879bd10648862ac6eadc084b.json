{"remainingRequest":"/Users/feliperrella/Documents/Poli/PEF/trabalho-calculo-reacoes/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/feliperrella/Documents/Poli/PEF/trabalho-calculo-reacoes/src/components/ReactionP1A.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/feliperrella/Documents/Poli/PEF/trabalho-calculo-reacoes/src/components/ReactionP1A.vue","mtime":1619216609530},{"path":"/Users/feliperrella/Documents/Poli/PEF/trabalho-calculo-reacoes/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/feliperrella/Documents/Poli/PEF/trabalho-calculo-reacoes/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/feliperrella/Documents/Poli/PEF/trabalho-calculo-reacoes/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/feliperrella/Documents/Poli/PEF/trabalho-calculo-reacoes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/feliperrella/Documents/Poli/PEF/trabalho-calculo-reacoes/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FwcCB7CiAgZm9udC1mYW1pbHk6ICJBdmVuaXIiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmOwogIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkOwogIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGNvbG9yOiAjMmY2N2EwOwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKfQojbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7CiAgd2lkdGg6IDYwJTsKICBoZWlnaHQ6IDEwMHZoOwp9CiNyaWdodCB7CiAgZmxvYXQ6IHJpZ2h0OwogIHdpZHRoOiA0MCU7CiAgaGVpZ2h0OiAxMDB2aDsKfQoKLmNhcmQtaW5mbyB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogNTAlOwogIGxlZnQ6IDUwJTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICB3aWR0aDogODAlOwogIGhlaWdodDogMTAwJTsKfQoKLmNhcmQtcmVuZGVyIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgd2lkdGg6IDgwJTsKICBoZWlnaHQ6IDEwMCU7CiAgdG9wOiA1MCU7CiAgbGVmdDogNTAlOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwp9Cg=="},{"version":3,"sources":["ReactionP1A.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReactionP1A.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n      <h1>Vigas em balan√ßo</h1>\n    <div id=\"left\">\n      <v-card class=\"mx-auto card-render\" id=\"render\" outlined> </v-card>\n    </div>\n    <div id=\"right\" v-if=\"true\">\n      <v-card class=\"mx-auto card-info\" outlined>\n        <script\n          type=\"application/javascript\"\n          defer\n          src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/mml-chtml.js\"\n        ></script>\n        <h2>Mouse position: {{ absolute }}</h2>\n        <h2>inRange: {{ inRange }}</h2>\n        <h2>Largura da Barra: {{ size }} centimetros</h2>\n\n        <div v-if=\"inRange\">\n          <h2>X Clicado: {{ clickX }}</h2>\n          <h2>Y Clicado: {{ clickY }}</h2>\n          <h2>l: {{ l }}</h2>\n          <h2>Forca: {{ f }} N</h2>\n          <h2>Ya: {{ f }} N</h2>\n          <h2>Ma: {{ ma }} N</h2>\n        </div>\n\n        <p>\n          <math xmlns=\"http://www.w3.org/1998/Math/MathML\"\n            ><mstyle displaystyle=\"false\"\n              ><munder\n                ><mo>&#x2211;</mo><msub><mi>M</mi><mi>A</mi></msub></munder\n              ><mo>=</mo><mo>&#xA0;</mo><mn>0</mn></mstyle\n            ></math\n          >\n        </p>\n\n        <p>\n          <math xmlns=\"http://www.w3.org/1998/Math/MathML\"\n            ><mi :key=\"f\">{{ f }}</mi\n            ><mo>&#xA0;</mo><mo>&#xD7;</mo><mo>&#xA0;</mo\n            ><msub><mi>D</mi><mi>A</mi></msub\n            ><mo>&#xA0;</mo><mo>-</mo><mo>&#xA0;</mo\n            ><msub><mi>R</mi><mi>B</mi></msub\n            ><mo>&#xD7;</mo><mo>&#xA0;</mo><msub><mi>D</mi><mi>B</mi></msub\n            ><mo>&#xA0;</mo><mo>=</mo><mo>&#xA0;</mo><mn>0</mn></math\n          >\n        </p>\n      </v-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport \"pathseg\";\nimport Matter from \"matter-js\";\n\nexport default {\n  name: \"App\",\n  components: {},\n  data() {\n    return {\n      clickX: \"\",\n      clickY: \"\",\n      absolute: \"\",\n      inRange: true,\n      l: 0,\n      size: 0,\n      sizeAvailable: 0,\n      ma: 0,\n      rb: 0,\n      f: 0,\n    };\n  },\n  mounted() {\n    let height = document.getElementById(\"render\").clientHeight;\n    let width = document.getElementById(\"render\").clientWidth;\n    let engine = Matter.Engine.create();\n    let render = Matter.Render.create({\n      element: document.querySelector(\"#render\"),\n      engine: engine,\n      options: {\n        height: height,\n        width: width,\n      },\n    });\n\n    let ground = Matter.Bodies.rectangle(\n      width / 2,\n      height - height / 40,\n      width,\n      height / 20,\n      { isStatic: true }\n    );\n    let wall = Matter.Bodies.rectangle(\n      width/40,\n      height / 2,\n      width/ 20,\n      height,\n      { isStatic: true }\n    );\n    this.size = width * 0.6;\n    let boxA = Matter.Bodies.rectangle(\n      width*.3 + width/20,\n      height / 2,\n      width * 0.6,\n      height / 20,\n      { isStatic: false }\n    );\n    let constraint1 = Matter.Constraint.create({\n      bodyA: wall,\n      pointA: { x: width/40, y: height/40 },\n      bodyB: boxA,\n      pointB: { x: -width*.6/2, y: height/40 },\n    });\n    \n    let constraint2 = Matter.Constraint.create({\n      bodyA: wall,\n      pointA: { x: width/40, y: -height/40 },\n      bodyB: boxA,\n      pointB: { x: -width*.6/2, y: -height/40 },\n    });\n    /*\n    let constraint3 = Matter.Constraint.create({\n      bodyA: ground,\n      pointA: { x: (width / 2) * 0.5, y: 0 },\n      bodyB: boxA,\n      pointB: { x: (width / 2) * 0.65, y: 0 },\n    });\n    let constraint4 = Matter.Constraint.create({\n      bodyA: ground,\n      pointA: { x: (width / 2) * 0.8, y: 0 },\n      bodyB: boxA,\n      pointB: { x: (width / 2) * 0.65, y: 0 },\n    });*/\n\n    let mouse = Matter.Mouse.create(render.canvas);\n    this.absolute = mouse.absolute;\n\n    let mouseConstraint = Matter.MouseConstraint.create(engine, {\n      mouse: mouse,\n      constraint: {\n        render: { visible: true },\n      },\n    });\n\n    Matter.Events.on(mouseConstraint, \"startdrag\", (event) => {\n      let position = event.mouse.absolute;\n      console.log(position);\n      this.calculateSizes(position.x, position.y, width);\n    });\n\n    Matter.Events.on(mouseConstraint, \"enddrag\", (event) => {\n      let position = event.mouse.absolute;\n      console.log(position);\n      this.calculateReactions(position.y);\n    });\n\n    render.mouse = mouse;\n    Matter.World.add(engine.world, [\n      boxA,\n      ground,\n      wall,\n      mouseConstraint,\n      constraint1,\n      constraint2,\n      /*constraint3,\n      constraint4,*/\n    ]);\n    Matter.Engine.run(engine);\n    Matter.Render.run(render);\n  },\n  methods: {\n    calculateSizes(x, y, w) {\n      this.clickX = x;\n      this.clickY = y;\n      this.l = x - w/20\n      //this.da = x - p1;\n      //this.db = this.sizeAvailable - this.da;\n    },\n    calculateReactions(y) {\n      if (this.inRange) {\n        this.f = y - this.clickY;\n        this.ma = this.f * this.l/100\n        //this.rb = (this.f * this.da) / this.sizeAvailable;\n        //this.ra = this.f - this.rb;\n      }\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2f67a0;\n  width: 100%;\n  height: 100%;\n}\n#left {\n  float: left;\n  width: 60%;\n  height: 100vh;\n}\n#right {\n  float: right;\n  width: 40%;\n  height: 100vh;\n}\n\n.card-info {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 80%;\n  height: 100%;\n}\n\n.card-render {\n  position: absolute;\n  width: 80%;\n  height: 100%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</style>\n"]}]}